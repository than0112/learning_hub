#include <iostream>

using namespace std;


long zeros(long n) {
    // --- 演算法邏輯 ---
    // 1. 初始化一個計數器，用來儲存因子 5 的總數。
    long count = 0;

    // 2. 使用一個 for 迴圈，從 5 開始，不斷乘以 5 (5, 25, 125, ...)。
    //    這個迴圈會找出 n! 中所有 5 的倍數、25 的倍數、125 的倍數等等。
    //    - n / i 計算出從 1 到 n 中，總共有多少個 i 的倍數。
    //    - 迴圈的條件 i <= n 是一個優化，避免不必要的計算。
    for (long i = 5; n / i >= 1; i *= 5) {
        // a. n / 5: 算出有多少數字貢獻了至少一個 5。
        // b. n / 25: 25 是 5*5，所以 25 的倍數會額外再貢獻一個 5。
        // c. n / 125: 125 的倍數會再多貢獻一個 5，以此類推。
        count += n / i;
    }

    // 3. 回傳最終的總數。
    return count;
}
void run_test(long n) {
    cout << "輸入: " << n << " -> 輸出: " << zeros(n) << endl;
}

// --- 主程式：用來測試 zeros 函式 ---
int main() {
    cout << "--- 階乘末尾零計算器 ---\n";

    // --- 執行題目給的範例測試 ---
    cout << "\n--- 題目範例測試 ---\n";
    run_test(0);  // 預期輸出: 0
    run_test(6);  // 預期輸出: 1
    run_test(12); // 預期輸出: 2
    run_test(30); // 預期輸出: 7
    
    // --- 大數字測試 ---
    cout << "\n--- 大數字測試 ---\n";
    run_test(100);  // 預期輸出: 24
    run_test(1000); // 預期輸出: 249

    cout << "\n測試結束。\n";
    return 0;
}

