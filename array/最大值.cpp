#include <iostream>
#include <vector>

using namespace std;

int main() {
    // 準備一個範例陣列 (使用 vector)
    vector<int> numbers = {12, 45, 23, 6, 99, 78, 55};

    // --- 核心邏輯開始 ---

    // 處理陣列為空的情況，這是一個好的防呆習慣
    if (numbers.empty()) {
        cout << "陣列是空的，沒有最大值。" << endl;
        return 0;
    }

    // 1. 假設第一個數字是目前的冠軍 (最大值)
    int max_value = numbers[0];

    // 2. 讓後面的每一個數字來挑戰
    //    迴圈從索引 1 (第二個數字) 開始
    for (size_t i = 1; i < numbers.size(); i++) {
        // 3. 如果挑戰者 (numbers[i]) 比冠軍 (max_value) 還大
        if (numbers[i] > max_value) {
            // 4. 挑戰者就成為新的冠軍
            max_value = numbers[i];
        }
    }

    // --- 核心邏輯結束 ---

    // 印出最終結果
    cout << "陣列中的最大值是: " << max_value << endl;

    return 0;
}

/*核心概念：一場「世界最強王者」錦標賽
讓我們把這個過程想像成一場決定「世界最強王者」的錦標賽。

vector<int> numbers = {12, 45, 23, 6, 99, 78, 55};
這份 vector 就是我們的「參賽者名單」，上面記錄了每一位選手的「戰鬥力」。

max_value = numbers[0]; (這是在迴圈開始前的那一行)
比賽開始！我們直接把名單上的第一位選手 (12) 請上擂台，暫時宣布他為「現任王者 (Current Champion)」。max_value 這個變數，就是現任王者展示他戰鬥力（12）的計分板。

現在，比賽的重頭戲——也就是你問的這段 for 迴圈——正式開始。

## 程式碼的精準剖析
for (size_t i = 1; i < numbers.size(); ++i) - 司儀 (The Announcer)
這行 for 迴圈扮演著「司儀」的角色，他的工作是依序把剩下的每一位選手請上擂台來挑戰王者。

size_t i = 1:
為什麼從 1 開始？ 因為 0 號選手 (12) 已經是第一位臨時王者了，我們不需要讓他自己挑戰自己。司儀直接從名單上的第二位選手（索引 1，戰鬥力 45）開始介紹。

i < numbers.size():
挑戰要持續到什麼時候？ 直到名單上的最後一位選手都上場挑戰過為止。numbers.size() 是隊伍的總人數（7），而最後一位選手的索引是 6。所以 i < 7 這個條件確保了從索引 1 到 6 的每一位選手都會上場。

++i:
司儀在每一次挑戰結束後，都會喊出「下一位！」，把 i 加一，介紹下一位挑戰者。

if (numbers[i] > max_value) - 力量對決 (The Strength Showdown)
這就是比賽的核心，是挑戰者與現任王者的正面對決。

numbers[i]：是當前上台的挑戰者的戰鬥力。

max_value：是擂台上現任王者的戰鬥力。

這個 if 敘述就是在問：「挑戰者的戰鬥力，是否比現任王者更強？」

max_value = numbers[i]; - 王權交替 (The Transfer of the Crown)
這是在 if 條件為真時才會發生的事——王權的交替。

如果挑戰者 (numbers[i]) 的戰鬥力確實更強大，這行程式碼就會執行。

舊王者下台，冠軍計分板 (max_value 變數) 上的數字，被更新為新的、更強的挑戰者 numbers[i] 的戰鬥力。

如果挑戰者比較弱，if 條件不成立，什麼事都不會發生，現任王者成功衛冕，繼續站在台上。

## 演練一遍
初始: max_value 是 12。

i = 1: 挑戰者 45 上台。45 > 12？是。王權交替！ max_value 更新為 45。

i = 2: 挑戰者 23 上台。23 > 45？否。王者 45 衛冕。

i = 3: 挑戰者 6 上台。6 > 45？否。王者 45 衛冕。

i = 4: 挑戰者 99 上台。99 > 45？是。王權交替！ max_value 更新為 99。

i = 5: 挑戰者 78 上台。78 > 99？否。王者 99 衛冕。

i = 6: 挑戰者 55 上台。55 > 99？否。王者 99 衛冕。

迴圈結束。最終還站在台上的王者，戰鬥力是 99，他就是所有選手中的最強者*/